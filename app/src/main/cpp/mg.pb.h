// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mg.proto

#ifndef PROTOBUF_mg_2eproto__INCLUDED
#define PROTOBUF_mg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mg_2eproto();
void protobuf_AssignDesc_mg_2eproto();
void protobuf_ShutdownFile_mg_2eproto();

class MAGIC_CODE;

enum MAGIC_CODE_MagicCodeAction {
  MAGIC_CODE_MagicCodeAction_GENERATEPSEUDOR = 1,
  MAGIC_CODE_MagicCodeAction_VERIFYMAGICCODE = 2,
  MAGIC_CODE_MagicCodeAction_FEATUREUNLOCK = 3
};
bool MAGIC_CODE_MagicCodeAction_IsValid(int value);
const MAGIC_CODE_MagicCodeAction MAGIC_CODE_MagicCodeAction_MagicCodeAction_MIN = MAGIC_CODE_MagicCodeAction_GENERATEPSEUDOR;
const MAGIC_CODE_MagicCodeAction MAGIC_CODE_MagicCodeAction_MagicCodeAction_MAX = MAGIC_CODE_MagicCodeAction_FEATUREUNLOCK;
const int MAGIC_CODE_MagicCodeAction_MagicCodeAction_ARRAYSIZE = MAGIC_CODE_MagicCodeAction_MagicCodeAction_MAX + 1;

// ===================================================================

class MAGIC_CODE : public ::google::protobuf::MessageLite {
 public:
  MAGIC_CODE();
  virtual ~MAGIC_CODE();
  
  MAGIC_CODE(const MAGIC_CODE& from);
  
  inline MAGIC_CODE& operator=(const MAGIC_CODE& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const MAGIC_CODE& default_instance();
  
  void Swap(MAGIC_CODE* other);
  
  // implements Message ----------------------------------------------
  
  MAGIC_CODE* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MAGIC_CODE& from);
  void MergeFrom(const MAGIC_CODE& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  typedef MAGIC_CODE_MagicCodeAction MagicCodeAction;
  static const MagicCodeAction GENERATEPSEUDOR = MAGIC_CODE_MagicCodeAction_GENERATEPSEUDOR;
  static const MagicCodeAction VERIFYMAGICCODE = MAGIC_CODE_MagicCodeAction_VERIFYMAGICCODE;
  static const MagicCodeAction FEATUREUNLOCK = MAGIC_CODE_MagicCodeAction_FEATUREUNLOCK;
  static inline bool MagicCodeAction_IsValid(int value) {
    return MAGIC_CODE_MagicCodeAction_IsValid(value);
  }
  static const MagicCodeAction MagicCodeAction_MIN =
    MAGIC_CODE_MagicCodeAction_MagicCodeAction_MIN;
  static const MagicCodeAction MagicCodeAction_MAX =
    MAGIC_CODE_MagicCodeAction_MagicCodeAction_MAX;
  static const int MagicCodeAction_ARRAYSIZE =
    MAGIC_CODE_MagicCodeAction_MagicCodeAction_ARRAYSIZE;
  
  // accessors -------------------------------------------------------
  
  // required .MAGIC_CODE.MagicCodeAction MGAction = 1;
  inline bool has_mgaction() const;
  inline void clear_mgaction();
  static const int kMGActionFieldNumber = 1;
  inline ::MAGIC_CODE_MagicCodeAction mgaction() const;
  inline void set_mgaction(::MAGIC_CODE_MagicCodeAction value);
  
  // required int64 MachinePoweronTime = 2;
  inline bool has_machinepowerontime() const;
  inline void clear_machinepowerontime();
  static const int kMachinePoweronTimeFieldNumber = 2;
  inline ::google::protobuf::int64 machinepowerontime() const;
  inline void set_machinepowerontime(::google::protobuf::int64 value);
  
  // required int32 SoftwareVersion = 3;
  inline bool has_softwareversion() const;
  inline void clear_softwareversion();
  static const int kSoftwareVersionFieldNumber = 3;
  inline ::google::protobuf::int32 softwareversion() const;
  inline void set_softwareversion(::google::protobuf::int32 value);
  
  // required int32 MacAddress = 4;
  inline bool has_macaddress() const;
  inline void clear_macaddress();
  static const int kMacAddressFieldNumber = 4;
  inline ::google::protobuf::int32 macaddress() const;
  inline void set_macaddress(::google::protobuf::int32 value);
  
  // required int32 SerilNumber = 5;
  inline bool has_serilnumber() const;
  inline void clear_serilnumber();
  static const int kSerilNumberFieldNumber = 5;
  inline ::google::protobuf::int32 serilnumber() const;
  inline void set_serilnumber(::google::protobuf::int32 value);
  
  // required int32 FeatureIndex = 6;
  inline bool has_featureindex() const;
  inline void clear_featureindex();
  static const int kFeatureIndexFieldNumber = 6;
  inline ::google::protobuf::int32 featureindex() const;
  inline void set_featureindex(::google::protobuf::int32 value);
  
  // required int32 Key = 7;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 7;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:MAGIC_CODE)
 private:
  inline void set_has_mgaction();
  inline void clear_has_mgaction();
  inline void set_has_machinepowerontime();
  inline void clear_has_machinepowerontime();
  inline void set_has_softwareversion();
  inline void clear_has_softwareversion();
  inline void set_has_macaddress();
  inline void clear_has_macaddress();
  inline void set_has_serilnumber();
  inline void clear_has_serilnumber();
  inline void set_has_featureindex();
  inline void clear_has_featureindex();
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::int64 machinepowerontime_;
  int mgaction_;
  ::google::protobuf::int32 softwareversion_;
  ::google::protobuf::int32 macaddress_;
  ::google::protobuf::int32 serilnumber_;
  ::google::protobuf::int32 featureindex_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_mg_2eproto();
  friend void protobuf_AssignDesc_mg_2eproto();
  friend void protobuf_ShutdownFile_mg_2eproto();
  
  void InitAsDefaultInstance();
  static MAGIC_CODE* default_instance_;
};
// ===================================================================


// ===================================================================

// MAGIC_CODE

// required .MAGIC_CODE.MagicCodeAction MGAction = 1;
inline bool MAGIC_CODE::has_mgaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MAGIC_CODE::set_has_mgaction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MAGIC_CODE::clear_has_mgaction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MAGIC_CODE::clear_mgaction() {
  mgaction_ = 1;
  clear_has_mgaction();
}
inline ::MAGIC_CODE_MagicCodeAction MAGIC_CODE::mgaction() const {
  return static_cast< ::MAGIC_CODE_MagicCodeAction >(mgaction_);
}
inline void MAGIC_CODE::set_mgaction(::MAGIC_CODE_MagicCodeAction value) {
  GOOGLE_DCHECK(::MAGIC_CODE_MagicCodeAction_IsValid(value));
  set_has_mgaction();
  mgaction_ = value;
}

// required int64 MachinePoweronTime = 2;
inline bool MAGIC_CODE::has_machinepowerontime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MAGIC_CODE::set_has_machinepowerontime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MAGIC_CODE::clear_has_machinepowerontime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MAGIC_CODE::clear_machinepowerontime() {
  machinepowerontime_ = GOOGLE_LONGLONG(0);
  clear_has_machinepowerontime();
}
inline ::google::protobuf::int64 MAGIC_CODE::machinepowerontime() const {
  return machinepowerontime_;
}
inline void MAGIC_CODE::set_machinepowerontime(::google::protobuf::int64 value) {
  set_has_machinepowerontime();
  machinepowerontime_ = value;
}

// required int32 SoftwareVersion = 3;
inline bool MAGIC_CODE::has_softwareversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MAGIC_CODE::set_has_softwareversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MAGIC_CODE::clear_has_softwareversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MAGIC_CODE::clear_softwareversion() {
  softwareversion_ = 0;
  clear_has_softwareversion();
}
inline ::google::protobuf::int32 MAGIC_CODE::softwareversion() const {
  return softwareversion_;
}
inline void MAGIC_CODE::set_softwareversion(::google::protobuf::int32 value) {
  set_has_softwareversion();
  softwareversion_ = value;
}

// required int32 MacAddress = 4;
inline bool MAGIC_CODE::has_macaddress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MAGIC_CODE::set_has_macaddress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MAGIC_CODE::clear_has_macaddress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MAGIC_CODE::clear_macaddress() {
  macaddress_ = 0;
  clear_has_macaddress();
}
inline ::google::protobuf::int32 MAGIC_CODE::macaddress() const {
  return macaddress_;
}
inline void MAGIC_CODE::set_macaddress(::google::protobuf::int32 value) {
  set_has_macaddress();
  macaddress_ = value;
}

// required int32 SerilNumber = 5;
inline bool MAGIC_CODE::has_serilnumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MAGIC_CODE::set_has_serilnumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MAGIC_CODE::clear_has_serilnumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MAGIC_CODE::clear_serilnumber() {
  serilnumber_ = 0;
  clear_has_serilnumber();
}
inline ::google::protobuf::int32 MAGIC_CODE::serilnumber() const {
  return serilnumber_;
}
inline void MAGIC_CODE::set_serilnumber(::google::protobuf::int32 value) {
  set_has_serilnumber();
  serilnumber_ = value;
}

// required int32 FeatureIndex = 6;
inline bool MAGIC_CODE::has_featureindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MAGIC_CODE::set_has_featureindex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MAGIC_CODE::clear_has_featureindex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MAGIC_CODE::clear_featureindex() {
  featureindex_ = 0;
  clear_has_featureindex();
}
inline ::google::protobuf::int32 MAGIC_CODE::featureindex() const {
  return featureindex_;
}
inline void MAGIC_CODE::set_featureindex(::google::protobuf::int32 value) {
  set_has_featureindex();
  featureindex_ = value;
}

// required int32 Key = 7;
inline bool MAGIC_CODE::has_key() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MAGIC_CODE::set_has_key() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MAGIC_CODE::clear_has_key() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MAGIC_CODE::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 MAGIC_CODE::key() const {
  return key_;
}
inline void MAGIC_CODE::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mg_2eproto__INCLUDED
